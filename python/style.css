@import "_libs/css/bootstrap.min.css";

.roomActive {
  display: none;
}

.hidden {
  visibility: hidden;
}

.disclosed {
  display: none;
}
p,
label {
  font: 1rem "Fira Sans", sans-serif;
}

input {
  margin: 0.4rem;
}

.slidecontainer {
  width: 100%; /* Width of the outside container */
}

.border {
  border: 2px solid red;
}



    Home
        Public

Questions
Tags
Users
Companies
Collectives

    Explore Collectives

    Teams
    Stack Overflow for Teams – Start collaborating and sharing organizational knowledge. 

Responsive Design: how to have text input and button stay 100% width of parent
Asked 9 years, 1 month ago
Modified 6 years, 6 months ago
Viewed 69k times
Report this ad
16

Very simple question... I'm hacking it right now with floated percentages (but I know that there has to be a better solution) please see my photo as an example to go by. I want to have the parent stay 100% in width and the search box be an automatic width that always stays next to the search button, and I want the search button to be able to grow as wide as it wants to (depending on the text inside of it/padding).

enter image description here

    htmlcssresponsive-design

Share
Improve this question
Follow
asked Sep 17, 2013 at 20:39
Oneezy's user avatar
Oneezy
4,64577 gold badges4141 silver badges7373 bronze badges

    if you are using media query breakpoints, rather than a fluid layout, just set the widths explicitly in the media queries – 
    Steve
    Sep 17, 2013 at 20:50
    1
    Do you mean like so? jsfiddle.net/27M3Q – 
    Sven
    Sep 17, 2013 at 20:51
    For this particular instance I need this to be fluid (We will have over 50 languages go inside this button for localization so it needs to be able for its width to be automatic with padding)..and No, not like that @Sven , that's the method I'm currently using. The problem with that is the button is a percentage (I'm trying to allow the button to be as wide as the word inside it and allow the search field to be 100% next to the button). – 
    Oneezy
    Sep 17, 2013 at 21:00 

Add a comment
3 Answers
Sorted by:
26
UPDATE (The Flexbox Way!)

The proper way to achieve this now is with Flexbox!

CSS "Flexbox" Way (https://jsfiddle.net/1jxkyLdv/)

    /* CSS
    **************************************************************************/

    /* Reset */
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body { margin: 1rem; }
    h2 { margin: 2rem 0 0; }


    /* Flexbox Example */
    .flexbox { display: flex; }
    .flexbox .stretch { flex: 1; }
    .flexbox .normal { flex: 0; margin: 0 0 0 1rem; }
    .flexbox div input { padding: .5em 1em; width: 100%; }
    .flexbox div button { padding: .5em 1em; white-space: nowrap; }



    <!-- HTML ------------------------------------------------------------------->

    <h1>Flexbox Way!</h1>

    <h2>Short Word</h2>
    <section class="flexbox">
            <div class="stretch">
                <input type="text" placeholder="Search..." />
            </div>
            <div class="normal">
                <button>Search</button>
            </div>
    </section>

    <h2>Long Word</h2>
    <section class="flexbox">
            <div class="stretch">
                <input type="text" placeholder="Search..." />
            </div>
            <div class="normal">
                <button>Super Long Word For Search Button With Flexbox!</button>
            </div>
    </section>


THE OLD WAY

I despise using tables or using css to make divs act like tables), But here's the other way.

CSS "Table-Cell" Way (http://jsfiddle.net/eUhTM/3/)

        * { box-sizing: border-box; }

        section { width: 100%; display: table; padding: 1em 0 0; }
        div { display: table-cell; width: 100%; }
        input { width: 100%; padding: .5em 1em; }
        button { color: black; padding: .5em 1em; white-space: nowrap; margin: 0 0 0 1em; }

        <h1>Short Word</h1>
        <section>
                <div>
                    <input type="text" placeholder="Search..." />
                </div>
                <div>
                    <button>Search</button>
                </div>
        </section>



SOLUTION
The main trick is to make the section a "display: table;" and the divs inside "display: table-cell;", you're input "width: 100%" and you're button "white-space: nowrap".



I'm still interested in solutions though!

Thank you everyone for your great answers.
Share
Improve this answer
Follow
edited Apr 22, 2016 at 10:53
answered Sep 17, 2013 at 21:58
Oneezy's user avatar
Oneezy
4,64577 gold badges4141 silver badges7373 bronze badges
Add a comment
Report this ad
5

This is indeed a bit tricky, especially if you do not know the width of the button in advance. You could off course go for a js solution, which should be fairly straightforward, but I prefer sticking to css as much as possible.

I did come up with a solution that works in your layout:

<div class='searchBox'>
    <input type='text' placeholder='search...'/>
    <button>Search</button>
</div>



    .searchBox {
        position: relative;
        padding: 10px;
    }
    input {
        box-sizing: border-box;
        width: 100%;
        border: 1px solid #999;
        background: #fff;
        padding: 10px;
    }
    
#gradient{
   display: inline;
    word-break: break-all;
}

/* The slider itself */
.slider {
  -webkit-appearance: none; /* Override default CSS styles */
  appearance: none;
  width: 50%; /* Full-width */
  height: 25px; /* Specified height */
  background: #d3d3d3; /* Grey background */
  outline: none; /* Remove outline */
  opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
  -webkit-transition: 0.2s; /* 0.2 seconds transition on hover */
  transition: opacity 0.2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1; /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  width: 25px; /* Set a specific slider handle width */
  height: 25px; /* Slider handle height */
  background: #04aa6d; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.slider::-moz-range-thumb {
  width: 25px; /* Set a specific slider handle width */
  height: 25px; /* Slider handle height */
  background: #04aa6d; /* Green background */
  cursor: pointer; /* Cursor on hover */
}
